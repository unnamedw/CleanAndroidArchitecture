apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.doach.cleanandroidarchitecture"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
//        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }

    dataBinding {
        enabled = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    def lifecycle_version = "2.3.0"
    def activity_version = "1.2.0"
    def retrofit_version = "2.9.0"
    def paging_version = "3.1.0"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.6'
    testImplementation "org.mockito:mockito-core:3.12.4" // Mockito
    testImplementation 'androidx.test:core:1.4.0' // Robolectric

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation "androidx.test:runner:1.4.0"
    androidTestImplementation "androidx.test:rules:1.4.0"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0' // Optional -- UI testing with Espresso
    androidTestImplementation 'org.robolectric:robolectric:4.6'

    // rxjava3
//    implementation "io.reactivex.rxjava3:rxjava:3.0.11"

    // rxjava2
    implementation "io.reactivex.rxjava2:rxjava:2.2.21"
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"

    // Kotlin
    implementation "androidx.activity:activity-ktx:$activity_version"

    // hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    testImplementation "com.google.dagger:hilt-android-testing:$hilt_version" // For Robolectric tests.
    kaptTest "com.google.dagger:hilt-android-compiler:$hilt_version" // ...with Kotlin.
    testAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version" // ...with Java.
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version" // For instrumented tests.
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version" // ...with Kotlin.
    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version" // ...with Java.

    // paging3
//    implementation "androidx.paging:paging-runtime-ktx:$paging_version"
//    implementation "androidx.paging:paging-rxjava2-ktx:$paging_version" // optional - RxJava2 support
//    implementation "androidx.paging:paging-rxjava3:$paging_version" // optional - RxJava3 support

    // multiDex
//    implementation "androidx.multidex:multidex:2.0.1"
}